{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","contexts.ts","hooks.ts","RecordControl.tsx","utils.ts","UserControls.tsx","BottomBar.tsx","DialogView.tsx","EditableSpan.tsx","SpeakerList.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","UserContext","createContext","undefined","SpeakersContext","speakers","setSpeakers","_","useUser","useContext","Styles","styled","div","RecordControl","setCredential","setStop","saveToQuip","user","useState","loading","setLoading","handleStartSession","useCallback","path","Auth","currentSession","session","jwtToken","getIdToken","getJwtToken","API","get","headers","Authorization","data","credentials","catch","handleStopSession","handleSaveToQuip","url","prompt","color","size","disabled","onClick","UserControls","attributes","email","BottomBar","props","DialogView","dialog","partial","speakerOptions","onSetSpeaker","updateDialog","editing","setEditing","_color","Color","speakerName","speaker","String","style","borderColor","className","backgroundColor","icon","faUserAstronaut","Dropdown","Toggle","Menu","show","name","Item","href","lighten","hex","contentEditable","Form","Control","value","words","onChange","dialogId","target","faClock","startTime","toFixed","React","memo","EditableSpan","children","setValue","useEffect","Button","SpeakerList","speakerNames","onNameChange","unallocatedSpeakerNames","addNewSpeaker","newSpeakerName","setNewSpeakerName","ListGroup","newValue","background","customSpeakerIds","DEFAULT_COLORS","distinctColors","count","lightMin","App","setUser","onAuthUIStateChange","nextAuthState","authData","AuthState","SignedIn","stop","credential","region","transcription","setTranscription","setPartial","error","handleEventStreamMessage","messageJson","results","Transcript","Results","length","Alternatives","transcript","decodeURIComponent","escape","IsPartial","t","dialogsToAppend","Items","item","Speaker","text","Content","type","Type","StartTime","endTime","EndTime","lastDialog","pop","push","uuidv4","window","access_id","AccessKeyId","secret_key","SecretAccessKey","session_token","SessionToken","startTranscribe","closeSocket","console","log","useTranscribe","allocateSpeakerNames","speakerContextValue","useMemo","allSpeakers","Set","sort","unallocated","filter","includes","colors","handleSpeakerNameChange","from","to","speakerId","parseInt","Number","handleCreateNewSpeaker","alert","s","handleSetSpeaker","newId","generateNewSpeakerId","indexToReplace","indexOf","slice","documentUrl","payload","markdown","dialogs","strings","join","makeMarkdown","content","put","body","open","updated","d","nd","Provider","Container","fluid","marginBottom","Row","Col","xs","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Amplify","configure","identityPoolId","userPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qcAAA,IAAIA,EAAM,CACT,qCAAsC,CACrC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,mCAAoC,CACnC,IACA,IAED,mCAAoC,CACnC,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,6BAA8B,CAC7B,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,uCAAwC,CACvC,IACA,GAED,+BAAgC,CAC/B,IACA,IAED,yCAA0C,CACzC,IACA,IAED,uCAAwC,CACvC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,iCAAkC,CACjC,IACA,IAED,0BAA2B,CAC1B,IACA,GAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,kCAAmC,CAClC,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,oCAAqC,CACpC,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,qCAAsC,CACrC,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,oCAAqC,CACpC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,qCAAsC,CACrC,IACA,IAED,oCAAqC,CACpC,IACA,IAED,6BAA8B,CAC7B,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,MAG7BX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,IAEpBC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,G,gOCjIJgB,EAAcC,6BAAuCC,GAMrDC,EAAkBF,wBAAqC,CAClEG,SAAU,GACVC,YAAa,SAACC,GAAD,OAAO,Q,SCSTC,EAAU,kBACrBC,qBAAWR,I,wBCdPS,EAASC,IAAOC,IAAV,sFA8DGC,EAlDqC,SAAC,GAI9C,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEMC,EAAOT,IACb,EAA8BU,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAqBC,uBAAY,WCxBd,IAAIC,EDyBvBN,IACFG,GAAW,GACXL,GAAQ,IC3BiBQ,ED4Bb,iBC3BTC,IAAKC,iBAAiBlC,MAAK,SAACmC,GACjC,IAAMC,EAAWD,EAAQE,aAAaC,cACtC,OAAOC,IAAIC,IAAI,SAAUR,EAAM,CAC7BS,QAAS,CAAEC,cAAe,UAAYN,SDyBnCpC,MAAK,SAAC2C,GACLpB,EAAcoB,EAAKC,aACnBf,GAAW,MAEZgB,OAAM,kBAAMhB,GAAW,SAE3B,CAACH,EAAMH,IAEJuB,EAAoBf,uBAAY,WAChCL,GACFF,GAAQ,KAET,CAACE,EAAMF,IAEJuB,EAAmBhB,uBAAY,WACnC,IAAMiB,EAAMC,OAAO,sBACfD,GACFvB,EAAWuB,KAEZ,CAACvB,IAEJ,OACE,eAACN,EAAD,WACGS,GAAW,cAAC,aAAD,CAAYsB,MAAM,QAAQC,KAAM,KAC5C,cAAC,IAAD,CAAeC,UAAW1B,EAAM2B,QAASN,EAAzC,0BAGA,cAAC,IAAD,CAAeK,UAAW1B,EAAM2B,QAASvB,EAAzC,mBAGA,cAAC,IAAD,CAAesB,UAAW1B,EAAM2B,QAASP,EAAzC,sBEzDA3B,EAASC,IAAOC,IAAV,yJAwBGiC,EAbgB,WAAO,IAAD,EAC7B5B,EAAOT,IAEb,OAAKS,EAGH,eAAC,EAAD,WACE,sCAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAM6B,kBAAb,aAAO,EAAkBC,QACzB,cAAC,IAAD,OALc,MCddrC,EAASC,IAAOC,IAAV,iLAmBGoC,EATiC,SAACC,GAC/C,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,eAAmBA,Q,sDCTnBvC,EAASC,IAAOC,IAAV,o/BAmENsC,EAA8B,SAAC,GAO9B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,QAKI,IAJJX,aAII,MAJI,OAIJ,EAHJY,EAGI,EAHJA,eACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aAEA,EAAkC9C,qBAAWL,GAArCC,EAAR,EAAQA,SACR,GADA,EAAkBC,YACYY,oBAAS,IAAvC,mBAAOsC,EAAP,KAAgBC,EAAhB,KAEMC,EAASC,IAAMlB,GAEfmB,EACJT,IAAW9C,EAAS8C,EAAOU,UAAYC,OAAOX,EAAOU,UAEvD,OACE,eAAC,EAAD,CAAQE,MAAO,CAAEC,YAAavB,GAA9B,UACE,sBAAKwB,UAAU,OAAOF,MAAO,CAAEG,gBAAiBzB,GAAhD,UACGU,GACC,mCACE,sBAAKc,UAAU,UAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAAiBE,KAAMC,QAEzB,qBAAKH,UAAU,gBAAgBrB,QAAS,kBAAMa,GAAW,IAAzD,SACE,eAACY,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,UAAkBV,IAElB,cAACS,EAAA,EAASE,KAAV,CAAeC,KAAMhB,EAArB,SACGH,EAAerE,KAAI,SAACyF,GAAD,OAClB,cAACJ,EAAA,EAASK,KAAV,CAEEC,KAAK,IACL/B,QAAS,kBAAMU,EAAaH,EAAQsB,IAHtC,SAKGA,GAJIA,kBAapBrB,GACC,qBAAKa,UAAU,WAAf,SACE,cAAC,aAAD,SAIN,sBACEA,UAAU,UACVF,MAAO,CAAEG,gBAAiBR,EAAOkB,QAAQ,IAAKC,OAC9CC,iBAAiB,EAHnB,UAKE,cAACC,EAAA,EAAKC,QAAN,CACEC,MAAO9B,EAASA,EAAO+B,MAAQ9B,EAC/B+B,SAAU,SAAC3F,GACL+D,GAAgBJ,GAClBI,EAAaJ,EAAOiC,SAAU5F,EAAE6F,OAAOJ,UAI5C9B,GACC,sBAAKc,UAAU,YAAf,UACE,cAAC,IAAD,CAAiBE,KAAMmB,MADzB,IACsCnC,EAAOoC,UAAUC,QAAQ,GAD/D,cASKC,MAAMC,KAAKxC,G,oCC9GXyC,EAjCuB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUT,EAAe,EAAfA,SACjD,EAA0BjE,mBAAS0E,GAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA8B3E,oBAAS,GAAvC,mBAAOsC,EAAP,KAAgBC,EAAhB,KAMA,OAJAqC,qBAAU,WACRD,EAASD,KACR,CAACA,IAEGpC,EACL,gCACE,cAACuB,EAAA,EAAKC,QAAN,CAAcC,MAAOA,EAAOE,SAAU,SAAC3F,GAAD,OAAOqG,EAASrG,EAAE6F,OAAOJ,UAC/D,cAACc,EAAA,EAAD,CACEnD,QAAS,WACPiD,EAASD,GACTnC,GAAW,IAHf,oBAOU,IACV,cAACsC,EAAA,EAAD,CACEnD,QAAS,WACPuC,EAASF,GACTxB,GAAW,IAHf,qBAUF,sBAAMb,QAAS,kBAAMa,GAAW,IAAhC,SAAwCwB,KChCtCvE,EAASC,IAAOC,IAAV,6FA0DGoF,EA5CsB,SAAC,GAK/B,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,wBACAC,EACI,EADJA,cAEA,EAA4ClF,mBAAS,IAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KAEA,OACE,eAAC,EAAD,WACE,0CACA,eAACC,EAAA,EAAD,WACGN,EAAajH,KAAI,SAACyF,GAAD,OAChB,cAAC8B,EAAA,EAAU7B,KAAX,UACE,cAAC,EAAD,CAAcS,SAAU,SAACqB,GAAD,OAAcN,EAAazB,EAAM+B,IAAzD,SACG/B,KAFgBA,MAMtB0B,EAAwBnH,KAAI,SAACyF,GAAD,OAC3B,cAAC8B,EAAA,EAAU7B,KAAX,CAA2BX,MAAO,CAAE0C,WAAY,QAAhD,SACE,cAAC,EAAD,CAActB,SAAU,SAACqB,GAAD,OAAcN,EAAazB,EAAM+B,IAAzD,SACG/B,KAFgBA,SAOzB,cAACM,EAAA,EAAKC,QAAN,CACEC,MAAOoB,EACPlB,SAAU,SAAC3F,GAAD,OAAO8G,EAAkB9G,EAAE6F,OAAOJ,UAE9C,cAACc,EAAA,EAAD,CACEpD,UAAW0D,EACXzD,QAAS,WACPyD,GAAkBD,EAAcC,GAChCC,EAAkB,KAJtB,6BClCAI,GAA6B,GAe7BC,GAAiBC,IAAe,CACpCC,MAF4B,EAG5BC,SAAU,KACT9H,KAAI,SAACyD,GAAD,OAAWA,EAAMoC,SA4OTkC,GA1OO,WACpB,MAAwB7F,wBAAkCf,GAA1D,mBAAOc,EAAP,KAAa+F,EAAb,KAEAlB,qBAAU,WACR,OAAOmB,aAAoB,SAACC,EAAeC,GACrCD,IAAkBE,IAAUC,SAC9BL,EAAQG,GAERH,OAAQ7G,QAGX,IAGH,MAAwBe,qBAAxB,mBAAOoG,EAAP,KAAavG,EAAb,KAEA,EAAoCG,qBAApC,mBAAOqG,EAAP,KAAmBzG,EAAnB,KACA,ER9B2B,SAACyG,EAAiBC,EAAgBF,GAC7D,MAA0CpG,mBAAmB,IAA7D,mBAAOuG,EAAP,KAAsBC,EAAtB,KACA,EAA8BxG,mBAAiB,IAA/C,mBAAOkC,EAAP,KAAgBuE,EAAhB,KACA,EAA0BzG,qBAA1B,mBAAO0G,EAAP,KAEMC,GAFN,KAEiCvG,uBAAY,SAACwG,GAC5C,IAAMC,EAAUD,EAAYE,WAAWC,QAEvC,GAAIF,EAAQG,OAAS,GACfH,EAAQ,GAAGI,aAAaD,OAAS,EAAG,CACtC,IAAIE,EAAaL,EAAQ,GAAGI,aAAa,GAAGH,WAG5CI,EAAaC,mBAAmBC,OAAOF,IAEnCL,EAAQ,GAAGQ,UACbZ,EAAWS,IAEXT,EAAW,IACXD,GAAiB,SAACc,GAChB,IADgC,EAC1BC,EAA4B,GADF,cAEbV,EAAQ,GAAGI,aAAa,GAAGO,OAFd,IAEhC,2BAAqD,CAAC,IAA3CC,EAA0C,QAC7C9E,EAAU8E,EAAKC,QACfC,EAAOF,EAAKG,QACZC,EAAOJ,EAAKK,KACZzD,EAAYoD,EAAKM,UACjBC,EAAUP,EAAKQ,QAEfC,EACJX,EAAgBP,OAAS,EACrBO,EAAgBA,EAAgBP,OAAS,QACzC/H,EAEDiJ,GAAuB,mBAATL,GASjBN,EAAgBY,MAChBZ,EAAgBa,KAAhB,2BACKF,GADL,IAEElE,MACEkE,EAAWlE,OACD,kBAAT6D,EAA2B,IAAM,IAClCF,EACFK,cAfFT,EAAgBa,KAAK,CACnBlE,SAAUmE,cACV1F,UACAqB,MAAO2D,EACPtD,YACA2D,aApB0B,8BAkChC,MAAM,GAAN,mBAAWV,GAAMC,UAKxB,KAiBH,OAfA3C,qBAAU,WACJyB,GAAcC,IAAWF,GAC1BkC,OAAe3B,yBAA2BA,EAC1C2B,OAAehC,OAASA,EACxBgC,OAAeC,UAAYlC,EAAWmC,YACtCF,OAAeG,WAAapC,EAAWqC,gBACvCJ,OAAeK,cAAgBtC,EAAWuC,aAC1CN,OAAeO,mBAETzC,IACNkC,OAAeQ,cAChBC,QAAQC,IAAI,0BAEb,CAAC3C,EAAYC,EAAQK,EAA0BP,IAE3C,CACLG,gBACAC,mBACAtE,UACAwE,SQjD0DuC,CAC1D5C,EA1BW,YA4BXD,GAHMG,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,iBAAkBtE,EAAzC,EAAyCA,QAKzC,GALA,EAAkDwE,MAKlB1G,mBAAiC,KAAjE,mBAAOb,EAAP,KAAiBC,EAAjB,KAEA,EAAwDY,mBACtD,IADF,mBAAOiF,EAAP,KAAgCiE,EAAhC,KAIMC,EAAsBC,mBAC1B,iBAAO,CACLjK,WACAC,iBAEF,CAACD,IAGGkK,EAAc,YACf,IAAIC,IACL/C,EAAczI,KAAI,gBAAG6E,EAAH,EAAGA,QAAH,OAAiBxD,EAASwD,IAAYC,OAAOD,QAEjE4G,OAEF3E,qBAAU,WACRsE,GAAqB,SAACM,GAKpB,OAJkBA,EAAYC,QAAO,SAAClG,GAAD,OACnC8F,EAAYK,SAASnG,MAGTyD,OAAS,EACdwC,EAAYC,QAAO,SAAClG,GAAD,OAAW8F,EAAYK,SAASnG,MAErDiG,OAER,CAACH,IAEJ,IAAMM,EAASP,mBACb,kBACEC,EAAYrC,OA/DY,EAgEpBtB,IAAe,CAAEC,MAAO0D,EAAYrC,SAAUlJ,KAAI,SAACyD,GAAD,OAChDA,EAAMoC,SAER8B,KACN,CAAC4D,EAAYrC,SAGT4C,EAA0BxJ,uBAC9B,SAACyJ,EAAcC,GAEb,IAAIC,EAAY,KAChB,IAAK,IAAMrL,KAAMS,EACf,GAAIA,EAAST,KAAQmL,EAAM,CACzBE,EAAYrL,EACZ,MAIc,OAAdqL,GAAsBV,EAAYK,SAASG,GAE7CE,EAAYC,SAASH,GAErBd,QAAQrC,MAAM,0CAA2CmD,GAG3DzK,EAAY,2BAAKD,GAAN,kBAAiB8K,OAAOF,GAAaD,OAElD,CAAC3K,EAAUkK,IAGPa,EAAyB9J,uBAC7B,SAACmD,GAEG8F,EAAYK,SAASnG,IACrB0B,EAAwByE,SAASnG,GAEjC4G,MAAM,GAAD,OAAI5G,EAAJ,oBAEL2F,GAAqB,SAACkB,GAAD,4BAAWA,GAAX,CAAc7G,SAGvC,CAAC0B,EAAyBoE,IAGtBlH,EAAiBiH,mBACrB,uCAAUC,GAAV,YAA0BpE,MAC1B,CAACoE,EAAapE,IAGVoF,EAAmBjK,uBACvB,SAAC6B,EAAgBsB,GAEf,IAAI+G,EACJ,GAAIrF,EAAwByE,SAASnG,GACnC+G,EAnIqB,WAC3B,GAAgC,IAA5B9E,GAAiBwB,OAEnB,OADAxB,GAAiB4C,KAAK,KACf,IAEP,IAAMkC,EAAQ9E,GAAiBA,GAAiBwB,OAAS,GAAK,EAE9D,OADAxB,GAAiB4C,KAAKkC,GACfA,EA4HKC,OACH,CAEL,IAAIR,EAAY,KAChB,IAAK,IAAMrL,KAAMS,EACf,GAAIA,EAAST,KAAQ6E,EAAM,CACzBwG,EAAYrL,EACZ,MAIc,OAAdqL,GAAsBV,EAAYK,SAASnG,GAE7CwG,EAAYC,SAASzG,GAErBwF,QAAQrC,MAAM,0CAA2CnD,GAE3D+G,EAAQP,EAEV3K,GAAY,SAACgL,GAAD,mBAAC,eAAYA,GAAb,kBAAiBE,EAAQ/G,OACrCiD,GAAiB,SAACc,GAChB,IAAMkD,EAAiBlD,EAAEmD,QAAQxI,GACjC,MAAM,GAAN,mBACKqF,EAAEoD,MAAM,EAAGF,IADhB,4BAEOvI,GAFP,IAEeU,QAAS2H,KAFxB,YAGKhD,EAAEoD,MAAMF,EAAiB,UAIlC,CAACnB,EAAa7C,EAAkBrH,EAAU8F,IAGtC7D,EAAmBhB,uBACvB,SAACuK,GACC,INzKJtK,EACAuK,EMwKUC,EN7JgB,SAC1BC,EACA3L,GAEA,IADW,EACL4L,EAAU,CAAC,gBADN,cAGUD,GAHV,IAGX,2BAA8B,CAAC,IAApB7I,EAAmB,QAC5B8I,EAAQ3C,KAAR,WACMnG,EAAOoC,UAAUC,QAAQ,GAD/B,YACqCrC,EAAO+F,QAAQ1D,QAAQ,GAD5D,eAEInF,EAAS8C,EAAOU,UAAYV,EAAOU,QAFvC,cAGQV,EAAO+B,SAPN,8BAWX,OAAO+G,EAAQC,KAAK,QM+ICC,CAAa1E,EAAepH,INzKjDkB,EM2KoB,eN1KpBuK,EM0KoC,CAC9BM,QAASL,EACTF,eN1KCrK,IAAKC,iBAAiBlC,MAAK,SAACmC,GACjC,IAAMC,EAAWD,EAAQE,aAAaC,cACtC,OAAOC,IAAIuK,IAAI,SAAU9K,EAAM,CAC7B+K,KAAMR,EACN9J,QAAS,CAAEC,cAAe,UAAYN,SMwKnCpC,MAAK,WACJiK,OAAO+C,KAAKV,MAEbzJ,OAAM,SAACwF,GAAD,OAAWyD,MAAMzD,QAE5B,CAACH,EAAepH,IAEZkD,EAAejC,uBAAY,SAAC8D,EAAkBgH,GAClDnC,QAAQC,IAAR,8BAAmCkC,EAAnC,uBAAyDhH,IACzDsC,GAAiB,SAACc,GAChB,IADgC,EAC1BgE,EAAoB,GADM,cAEhBhE,GAFgB,IAEhC,2BAAmB,CAAC,IAATiE,EAAQ,QACjB,GAAIA,EAAErH,WAAaA,EAAnB,CAIA,IAAMsH,EAAE,2BACHD,GADG,IAENvH,MAAOkH,IAETI,EAAQlD,KAAKoD,QAPXF,EAAQlD,KAAKmD,IAJe,8BAahC,OAAOD,OAER,CAAC9E,IAEJ,OACE,cAAC,IAAD,UACGzG,GACC,eAAChB,EAAY0M,SAAb,CAAsB1H,MAAOhE,EAA7B,UACE,8BACE,cAAC2L,EAAA,EAAD,CAAWC,OAAK,EAAC9I,MAAO,CAAE+I,aAAc,QAAxC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC7M,EAAgBuM,SAAjB,CAA0B1H,MAAOoF,EAAjC,UACG5C,EAAczI,KAAI,SAACmE,EAAQ+J,GAAT,OACjB,cAAC,EAAD,CAEE/J,OAAQA,EACRV,MACEoI,EACEN,EAAYoB,QACVtL,EAAS8C,EAAOU,UAAYC,OAAOX,EAAOU,WAIhDR,eAAgBA,EAChBC,aAAciI,EACdhI,aAAcA,GAXT2J,MAcR9J,GACC,cAAC,EAAD,CACEA,QAASA,EACTC,eAAgBA,EAChBC,aAAciI,SAKtB,cAACyB,EAAA,EAAD,UACE,cAAC,EAAD,CACE/G,aAAcsE,EACdrE,aAAc4E,EACd3E,wBAAyBA,EACzBC,cAAegF,aAMzB,cAAC,EAAD,CACEtK,cAAeA,EACfE,WAAYsB,EACZvB,QAASA,UC1PNoM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB9N,MAAK,YAAkD,IAA/C+N,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,QAAQC,UAAU,CAEhBpM,KAAM,CAEJqM,eAAgB,iDAEhBrG,OAAQ,YAERsG,WAAY,sBAEZC,oBAAqB,8BAEvBjM,IAAK,CACHkM,UAAW,CACT,CACEvJ,KAAM,SACNwJ,SAAU,mEAMlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BnB,O","file":"static/js/main.e08262d5.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t510,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t511,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t512,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t513,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t514,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t515,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t516,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t517,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t518,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t519,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t520,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t521,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t522,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t523,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t524,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t525,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t526,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t527,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t528,\n\t\t30\n\t],\n\t\"./amplify-radio-button_3.entry.js\": [\n\t\t529,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t530,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t531,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t532,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t533,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t534,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t535,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t536,\n\t\t14\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t537,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 475;\nmodule.exports = webpackAsyncContext;","import { createContext } from \"react\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\n\nexport const UserContext = createContext<CognitoUser | undefined>(undefined);\n\ninterface SpeakersContextStates {\n  speakers: Record<number, string>;\n  setSpeakers: (value: Record<number, string>) => void;\n}\nexport const SpeakersContext = createContext<SpeakersContextStates>({\n  speakers: {},\n  setSpeakers: (_) => null,\n});\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"./contexts\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { Dialog } from \"./types\";\nimport { v4 as uuidv4 } from 'uuid';\n// import MicrophoneStream from \"microphone-stream\";\n// import {\n//   convertAudioToBinaryMessage,\n//   createPresignedUrl,\n// } from \"../public/amazon-transcribe-websocket-static/main\";\n// import { eventStreamMarshaller } from \"../public/amazon-transcribe-websocket-static/marshaller\";\n\ntype CognitoUserTweaked = CognitoUser & {\n  username?: string;\n  attributes?: {\n    email: string;\n    email_verified: boolean;\n  };\n};\n\nexport const useUser = (): CognitoUserTweaked | undefined =>\n  useContext(UserContext);\n\nexport const useTranscribe = (credential: any, region: string, stop: any) => {\n  const [transcription, setTranscription] = useState<Dialog[]>([]);\n  const [partial, setPartial] = useState<string>(\"\");\n  const [error, setError] = useState<string>();\n\n  const handleEventStreamMessage = useCallback((messageJson: any) => {\n    const results = messageJson.Transcript.Results;\n\n    if (results.length > 0) {\n      if (results[0].Alternatives.length > 0) {\n        let transcript = results[0].Alternatives[0].Transcript;\n\n        // fix encoding for accented characters\n        transcript = decodeURIComponent(escape(transcript));\n\n        if (results[0].IsPartial) {\n          setPartial(transcript);\n        } else {\n          setPartial(\"\");\n          setTranscription((t: Dialog[]) => {\n            const dialogsToAppend: Dialog[] = [];\n            for (const item of results[0].Alternatives[0].Items) {\n              const speaker = item.Speaker;\n              const text = item.Content;\n              const type = item.Type;\n              const startTime = item.StartTime;\n              const endTime = item.EndTime;\n\n              const lastDialog =\n                dialogsToAppend.length > 0\n                  ? dialogsToAppend[dialogsToAppend.length - 1]\n                  : undefined;\n\n              if (!lastDialog || type === \"speaker-change\") {\n                dialogsToAppend.push({\n                  dialogId: uuidv4(),\n                  speaker,\n                  words: text,\n                  startTime,\n                  endTime,\n                });\n              } else {\n                dialogsToAppend.pop();\n                dialogsToAppend.push({\n                  ...lastDialog,\n                  words:\n                    lastDialog.words +\n                    (type === \"pronunciation\" ? \" \" : \"\") +\n                    text,\n                  endTime,\n                });\n              }\n            }\n            return [...t, ...dialogsToAppend];\n          });\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (credential && region && !stop) {\n      (window as any).handleEventStreamMessage = handleEventStreamMessage;\n      (window as any).region = region;\n      (window as any).access_id = credential.AccessKeyId;\n      (window as any).secret_key = credential.SecretAccessKey;\n      (window as any).session_token = credential.SessionToken;\n      (window as any).startTranscribe();\n    }\n    else if (stop){\n      (window as any).closeSocket();\n      console.log(\"stop button clicked\");\n    }\n  }, [credential, region, handleEventStreamMessage, stop]);\n\n  return {\n    transcription,\n    setTranscription,\n    partial,\n    error,\n  };\n};\n\n// const useUserMedia = (): MediaStream | undefined => {\n//   const [userMediaStream, setUserMediaStream] =\n//     useState<MediaStream | undefined>(undefined);\n\n//   useEffect(() => {\n//     window.navigator.mediaDevices\n//       .getUserMedia({\n//         video: false,\n//         audio: true,\n//       })\n//       .then(setUserMediaStream)\n//       .catch(() => {\n//         alert(\"Cannot find the microphone\");\n//       });\n//   }, []);\n\n//   return userMediaStream;\n// };\n\n// const useMicStream = () => {\n//   const [micStream, setMicStream] =\n//     useState<MicrophoneStream | undefined>(undefined);\n//   const [inputSampleRate, setInputSampleRate] = useState();\n//   const userMediaStream = useUserMedia();\n\n//   useEffect(() => {\n//     if (userMediaStream) {\n//       console.log(\"creating mic stream\");\n//       const stream = new MicrophoneStream();\n//       (stream as any).on(\"format\", (data: any) => {\n//         setInputSampleRate(data.sampleRate);\n//       });\n\n//       stream.setStream(userMediaStream);\n\n//       (window as any).micStream = stream;\n//       setMicStream(stream);\n//     }\n//   }, [userMediaStream]);\n\n//   return { micStream, inputSampleRate };\n// };\n\n// export const useWebSocket = (credential: any, region: string) => {\n//   const [transcription, setTranscription] = useState<string>(\"\");\n//   const [partial, setPartial] = useState<string>(\"\");\n//   const [error, setError] = useState<string>();\n\n//   const handleEventStreamMessage = useCallback((messageJson: any) => {\n//     const results = messageJson.Transcript.Results;\n\n//     if (results.length > 0) {\n//       if (results[0].Alternatives.length > 0) {\n//         let transcript = results[0].Alternatives[0].Transcript;\n\n//         // fix encoding for accented characters\n//         transcript = decodeURIComponent(escape(transcript));\n\n//         if (results[0].IsPartial) {\n//           setPartial(transcript);\n//         } else {\n//           setPartial(\"\");\n//           setTranscription((t) => t + transcript + \"\\n\");\n//         }\n//       }\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     if (micStream && credential) {\n//       const url = createPresignedUrl(\n//         credential.AccessKeyId,\n//         credential.SecretAccessKey,\n//         credential.SessionToken,\n//         region\n//       ) as string;\n\n//       //open up our WebSocket connection\n//       const socket = new WebSocket(url);\n//       socket.binaryType = \"arraybuffer\";\n\n//       // when we get audio data from the mic, send it to the WebSocket if possible\n//       socket.onopen = function () {\n//         (micStream as any).on(\"data\", function (rawAudioChunk: any) {\n//           console.log(\"ondata\");\n//           // the audio stream is raw audio bytes. Transcribe expects PCM with additional metadata, encoded as binary\n//           const binary = convertAudioToBinaryMessage(\n//             rawAudioChunk,\n//             inputSampleRate\n//           );\n\n//           if (socket.readyState === socket.OPEN) socket.send(binary as any);\n//         });\n//       };\n\n//       // handle messages, errors, and close events\n//       // handle inbound messages from Amazon Transcribe\n//       socket.onmessage = function (message) {\n//         //convert the binary event stream message to JSON\n//         const messageWrapper = eventStreamMarshaller.unmarshall(\n//           Buffer.from(message.data)\n//         );\n//         const messageBody = JSON.parse(\n//           String.fromCharCode(...messageWrapper.body)\n//         );\n//         if (messageWrapper.headers[\":message-type\"].value === \"event\") {\n//           handleEventStreamMessage(messageBody);\n//         } else {\n//           setError(messageBody.Message);\n//           // TODO: stop\n//         }\n//       };\n\n//       socket.onerror = function () {\n//         setError(\"WebSocket connection error. Try again.\");\n//         // TODO: stop\n//       };\n\n//       socket.onclose = function (closeEvent) {\n//         console.log(\"closing websocket\");\n//         micStream.stop();\n\n//         // TODO: stop\n//       };\n//     }\n//   }, [\n//     handleEventStreamMessage,\n//     micStream,\n//     inputSampleRate,\n//     credential,\n//     region,\n//   ]);\n\n//   return {\n//     transcription,\n//     partial,\n//     error,\n//   };\n// };\n","import { AmplifyButton } from \"@aws-amplify/ui-react\";\nimport React, { useCallback, useState } from \"react\";\nimport { ClipLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport { useUser } from \"./hooks\";\nimport { makeRequest } from \"./utils\";\n\nconst Styles = styled.div`\n  display: flex;\n  width: auto;\n  align-items: center;\n`;\n\nexport interface RecordControlProps {\n  setCredential: (credential: any) => void;\n  setStop: (stop: any) => void;\n  saveToQuip: (documentUrl: string) => void;\n}\n\nconst RecordControl: React.FC<RecordControlProps> = ({\n  setCredential,\n  setStop,\n  saveToQuip,\n}) => {\n  const user = useUser();\n  const [loading, setLoading] = useState(false);\n\n  const handleStartSession = useCallback(() => {\n    if (user) {\n      setLoading(true);\n      setStop(false);\n      makeRequest(\"/start-session\")\n        .then((data: any) => {\n          setCredential(data.credentials);\n          setLoading(false);\n        })\n        .catch(() => setLoading(false));\n    }\n  }, [user, setCredential]);\n\n  const handleStopSession = useCallback(() => {\n    if (user) {\n      setStop(true);\n    }\n  }, [user, setStop]);\n\n  const handleSaveToQuip = useCallback(() => {\n    const url = prompt(\"Quip document URL:\");\n    if (url) {\n      saveToQuip(url);\n    }\n  }, [saveToQuip]);\n\n  return (\n    <Styles>\n      {loading && <ClipLoader color=\"white\" size={20} />}\n      <AmplifyButton disabled={!user} onClick={handleSaveToQuip}>\n        Save to Quip\n      </AmplifyButton>\n      <AmplifyButton disabled={!user} onClick={handleStartSession}>\n        Start\n      </AmplifyButton>\n      <AmplifyButton disabled={!user} onClick={handleStopSession}>\n        Stop\n      </AmplifyButton>\n    </Styles>\n  );\n};\n\nexport default RecordControl;\n","import { API, Auth } from \"aws-amplify\";\nimport { Dialog } from \"./types\";\n\nexport const makeRequest = <T>(path: string): Promise<T> => {\n  return Auth.currentSession().then((session) => {\n    const jwtToken = session.getIdToken().getJwtToken();\n    return API.get(\"SAMAPI\", path, {\n      headers: { Authorization: \"Bearer \" + jwtToken },\n    });\n  });\n};\n\nexport const makePostRequest = <T>(\n  path: string,\n  payload: Record<string, string>\n): Promise<T> => {\n  return Auth.currentSession().then((session) => {\n    const jwtToken = session.getIdToken().getJwtToken();\n    return API.put(\"SAMAPI\", path, {\n      body: payload,\n      headers: { Authorization: \"Bearer \" + jwtToken },\n    });\n  });\n};\n\nexport const makeMarkdown = (\n  dialogs: Dialog[],\n  speakers: Record<number, string>\n): string => {\n  const strings = [\"# Transcribe\"];\n\n  for (const dialog of dialogs) {\n    strings.push(\n      `(${dialog.startTime.toFixed(2)}-${dialog.endTime.toFixed(2)}) **${\n        speakers[dialog.speaker] || dialog.speaker\n      }** ${dialog.words}`\n    );\n  }\n\n  return strings.join(\"\\n\\n\");\n};\n","import { AmplifySignOut } from \"@aws-amplify/ui-react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useUser } from \"./hooks\";\n\nconst Styles = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & > span {\n    margin: 0 1rem;\n  }\n`;\n\nconst UserControls: React.FC = () => {\n  const user = useUser();\n\n  if (!user) return null;\n\n  return (\n    <Styles>\n      <span>{user?.attributes?.email}</span>\n      <AmplifySignOut />\n    </Styles>\n  );\n};\n\nexport default UserControls;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RecordControl, { RecordControlProps } from \"./RecordControl\";\nimport UserControls from \"./UserControls\";\n\nconst Styles = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  background-color: orange;\n  justify-content: space-between;\n  color: white;\n`;\n\nconst BottomBar: React.FC<RecordControlProps> = (props) => {\n  return (\n    <Styles>\n      <UserControls />\n      <RecordControl {...props} />\n    </Styles>\n  );\n};\n\nexport default BottomBar;\n","import { faClock, faUserAstronaut } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { BeatLoader } from \"react-spinners\";\nimport styled from \"styled-components\";\nimport { SpeakersContext } from \"./contexts\";\nimport { Dialog } from \"./types\";\nimport Color from \"color\";\nimport { Dropdown, Form } from \"react-bootstrap\";\n\nconst Styles = styled.div`\n  display: flex;\n  border: solid 1px;\n  border-radius: 5px;\n  margin: 1rem;\n\n  .meta {\n    flex-shrink: 0;\n    width: 120px;\n    position: relative;\n    text-align: center;\n    min-height: 50px;\n\n    .speaking {\n      margin-top: 5px;\n    }\n\n    .speaker {\n      width: 120px;\n      height: 80px;\n\n      .speaker-icon {\n        font-size: 30px;\n      }\n\n      .speaker-label {\n        font-weight: bold;\n        cursor: pointer;\n        font-size: 1rem;\n\n        .btn {\n          /* erase the styles brought by react-bootstrap */\n          background-color: unset !important;\n          border: unset !important;\n          color: black;\n        }\n      }\n    }\n  }\n\n  .content {\n    padding: 5px;\n    flex-grow: 1;\n    position: relative;\n\n    .form-control {\n      background-color: transparent !important;\n    }\n\n    .timestamp {\n      position: absolute;\n      font-size: 0.6rem;\n      bottom: 5px;\n      left: 10px;\n    }\n  }\n`;\n\ninterface Props {\n  dialog?: Dialog;\n  partial?: string;\n  color?: string;\n  speakerOptions: string[];\n  onSetSpeaker: (dialog: Dialog, name: string) => void;\n  updateDialog?: (diaglogId: string, dialog: string) => void;\n}\n\nconst DialogView: React.FC<Props> = ({\n  dialog,\n  partial,\n  color = \"#fff\",\n  speakerOptions,\n  onSetSpeaker,\n  updateDialog,\n}) => {\n  const { speakers, setSpeakers } = useContext(SpeakersContext);\n  const [editing, setEditing] = useState(false);\n\n  const _color = Color(color);\n\n  const speakerName =\n    dialog && (speakers[dialog.speaker] || String(dialog.speaker));\n\n  return (\n    <Styles style={{ borderColor: color }}>\n      <div className=\"meta\" style={{ backgroundColor: color }}>\n        {dialog && (\n          <>\n            <div className=\"speaker\">\n              <div className=\"speaker-icon\">\n                <FontAwesomeIcon icon={faUserAstronaut} />\n              </div>\n              <div className=\"speaker-label\" onClick={() => setEditing(true)}>\n                <Dropdown>\n                  <Dropdown.Toggle>{speakerName}</Dropdown.Toggle>\n\n                  <Dropdown.Menu show={editing}>\n                    {speakerOptions.map((name) => (\n                      <Dropdown.Item\n                        key={name}\n                        href=\"#\"\n                        onClick={() => onSetSpeaker(dialog, name)}\n                      >\n                        {name}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          </>\n        )}\n        {partial && (\n          <div className=\"speaking\">\n            <BeatLoader />\n          </div>\n        )}\n      </div>\n      <div\n        className=\"content\"\n        style={{ backgroundColor: _color.lighten(0.2).hex() }}\n        contentEditable={true}\n      >\n        <Form.Control\n          value={dialog ? dialog.words : partial}\n          onChange={(e) => {\n            if (updateDialog && dialog) {\n              updateDialog(dialog.dialogId, e.target.value);\n            }\n          }}\n        />\n        {dialog && (\n          <div className=\"timestamp\">\n            <FontAwesomeIcon icon={faClock} /> {dialog.startTime.toFixed(2)}s\n          </div>\n        )}\n      </div>\n    </Styles>\n  );\n};\n\nexport default React.memo(DialogView);\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\ninterface Props {\n  children: string;\n  onChange: (newValue: string) => void;\n}\n\nconst EditableSpan: React.FC<Props> = ({ children, onChange }) => {\n  const [value, setValue] = useState(children);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    setValue(children);\n  }, [children]);\n\n  return editing ? (\n    <div>\n      <Form.Control value={value} onChange={(e) => setValue(e.target.value)} />\n      <Button\n        onClick={() => {\n          setValue(children);\n          setEditing(false);\n        }}\n      >\n        Cancel\n      </Button>{\" \"}\n      <Button\n        onClick={() => {\n          onChange(value);\n          setEditing(false);\n        }}\n      >\n        Save\n      </Button>\n    </div>\n  ) : (\n    <span onClick={() => setEditing(true)}>{value}</span>\n  );\n};\n\nexport default EditableSpan;\n","import React, { useState } from \"react\";\nimport { Button, Form, ListGroup } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport EditableSpan from \"./EditableSpan\";\n\nconst Styles = styled.div`\n  position: fixed;\n  right: 0;\n  padding: 5px;\n  width: 25%;\n`;\n\ninterface Props {\n  speakerNames: string[];\n  unallocatedSpeakerNames: string[];\n  onNameChange: (from: string, to: string) => void;\n  addNewSpeaker: (name: string) => void;\n}\n\nconst SpeakerList: React.FC<Props> = ({\n  speakerNames,\n  onNameChange,\n  unallocatedSpeakerNames,\n  addNewSpeaker,\n}) => {\n  const [newSpeakerName, setNewSpeakerName] = useState(\"\");\n\n  return (\n    <Styles>\n      <h3>Speakers</h3>\n      <ListGroup>\n        {speakerNames.map((name) => (\n          <ListGroup.Item key={name}>\n            <EditableSpan onChange={(newValue) => onNameChange(name, newValue)}>\n              {name}\n            </EditableSpan>\n          </ListGroup.Item>\n        ))}\n        {unallocatedSpeakerNames.map((name) => (\n          <ListGroup.Item key={name} style={{ background: \"#ccc\" }}>\n            <EditableSpan onChange={(newValue) => onNameChange(name, newValue)}>\n              {name}\n            </EditableSpan>\n          </ListGroup.Item>\n        ))}\n      </ListGroup>\n      <Form.Control\n        value={newSpeakerName}\n        onChange={(e) => setNewSpeakerName(e.target.value)}\n      />\n      <Button\n        disabled={!newSpeakerName}\n        onClick={() => {\n          newSpeakerName && addNewSpeaker(newSpeakerName);\n          setNewSpeakerName(\"\");\n        }}\n      >\n        Add Speaker\n      </Button>\n    </Styles>\n  );\n};\n\nexport default SpeakerList;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AmplifyAuthenticator } from \"@aws-amplify/ui-react\";\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport BottomBar from \"./BottomBar\";\nimport { SpeakersContext, UserContext } from \"./contexts\";\nimport { CognitoUser } from \"amazon-cognito-identity-js\";\nimport { useTranscribe } from \"./hooks\";\nimport DialogView from \"./DialogView\";\nimport distinctColors from \"distinct-colors\";\nimport SpeakerList from \"./SpeakerList\";\nimport { Dialog } from \"./types\";\nimport { makeMarkdown, makePostRequest } from \"./utils\";\n\nconst customSpeakerIds: number[] = [];\nconst generateNewSpeakerId = (): number => {\n  if (customSpeakerIds.length === 0) {\n    customSpeakerIds.push(10000);\n    return 10000;\n  } else {\n    const newId = customSpeakerIds[customSpeakerIds.length - 1] + 1;\n    customSpeakerIds.push(newId);\n    return newId;\n  }\n};\n\nconst region = \"us-west-2\";\n\nconst DEFAULT_SPEAKER_COUNT = 6; // if there are more speakers, we recreate the colors object\nconst DEFAULT_COLORS = distinctColors({\n  count: DEFAULT_SPEAKER_COUNT,\n  lightMin: 80,\n}).map((color) => color.hex());\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<CognitoUser | undefined>(undefined);\n\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      if (nextAuthState === AuthState.SignedIn) {\n        setUser(authData as CognitoUser);\n      } else {\n        setUser(undefined);\n      }\n    });\n  }, []);\n\n\n  const [stop, setStop] = useState<any>();\n\n  const [credential, setCredential] = useState<any>();\n  const { transcription, setTranscription, partial, error } = useTranscribe(\n    credential,\n    region,\n    stop\n  );\n  const [speakers, setSpeakers] = useState<Record<number, string>>({});\n\n  const [unallocatedSpeakerNames, allocateSpeakerNames] = useState<string[]>(\n    []\n  );\n\n  const speakerContextValue = useMemo(\n    () => ({\n      speakers,\n      setSpeakers,\n    }),\n    [speakers]\n  );\n\n  const allSpeakers = [\n    ...new Set(\n      transcription.map(({ speaker }) => speakers[speaker] || String(speaker))\n    ),\n  ].sort();\n\n  useEffect(() => {\n    allocateSpeakerNames((unallocated) => {\n      const allocated = unallocated.filter((name) =>\n        allSpeakers.includes(name)\n      );\n\n      if (allocated.length > 0) {\n        return unallocated.filter((name) => !allSpeakers.includes(name));\n      }\n      return unallocated;\n    });\n  }, [allSpeakers]);\n\n  const colors = useMemo(\n    () =>\n      allSpeakers.length > DEFAULT_SPEAKER_COUNT\n        ? distinctColors({ count: allSpeakers.length }).map((color) =>\n            color.hex()\n          )\n        : DEFAULT_COLORS,\n    [allSpeakers.length]\n  );\n\n  const handleSpeakerNameChange = useCallback(\n    (from: string, to: string) => {\n      // find old speaker id\n      let speakerId = null;\n      for (const id in speakers) {\n        if (speakers[id] === from) {\n          speakerId = id;\n          break;\n        }\n      }\n\n      if (speakerId === null && allSpeakers.includes(from)) {\n        // it is a speaker number\n        speakerId = parseInt(from);\n      } else {\n        console.error(\"Cannot find speaker with existing name \", from);\n      }\n\n      setSpeakers({ ...speakers, [Number(speakerId)]: to });\n    },\n    [speakers, allSpeakers]\n  );\n\n  const handleCreateNewSpeaker = useCallback(\n    (name: string) => {\n      if (\n        allSpeakers.includes(name) ||\n        unallocatedSpeakerNames.includes(name)\n      ) {\n        alert(`${name} already exists`);\n      } else {\n        allocateSpeakerNames((s) => [...s, name]);\n      }\n    },\n    [unallocatedSpeakerNames, allSpeakers]\n  );\n\n  const speakerOptions = useMemo(\n    () => [...allSpeakers, ...unallocatedSpeakerNames],\n    [allSpeakers, unallocatedSpeakerNames]\n  );\n\n  const handleSetSpeaker = useCallback(\n    (dialog: Dialog, name: string) => {\n      // set to unallocated speaker\n      let newId: number;\n      if (unallocatedSpeakerNames.includes(name)) {\n        newId = generateNewSpeakerId();\n      } else {\n        // find old speaker id\n        let speakerId = null;\n        for (const id in speakers) {\n          if (speakers[id] === name) {\n            speakerId = id;\n            break;\n          }\n        }\n\n        if (speakerId === null && allSpeakers.includes(name)) {\n          // it is a speaker number\n          speakerId = parseInt(name);\n        } else {\n          console.error(\"Cannot find speaker with existing name \", name);\n        }\n        newId = speakerId as unknown as number;\n      }\n      setSpeakers((s) => ({ ...s, [newId]: name }));\n      setTranscription((t: Dialog[]) => {\n        const indexToReplace = t.indexOf(dialog);\n        return [\n          ...t.slice(0, indexToReplace),\n          { ...dialog, speaker: newId },\n          ...t.slice(indexToReplace + 1),\n        ];\n      });\n    },\n    [allSpeakers, setTranscription, speakers, unallocatedSpeakerNames]\n  );\n\n  const handleSaveToQuip = useCallback(\n    (documentUrl: string) => {\n      const markdown = makeMarkdown(transcription, speakers);\n\n      makePostRequest(\"/putDocument\", {\n        content: markdown,\n        documentUrl,\n      })\n        .then(() => {\n          window.open(documentUrl);\n        })\n        .catch((error) => alert(error));\n    },\n    [transcription, speakers]\n  );\n  const updateDialog = useCallback((dialogId: string, content: string) => {\n    console.log(`Changing content to ${content}, dialogId: ${dialogId}`);\n    setTranscription((t: Dialog[]) => {\n      const updated: Dialog[] = [];\n      for (const d of t) {\n        if (d.dialogId !== dialogId) {\n          updated.push(d);\n          continue;\n        }\n        const nd = {\n          ...d,\n          words: content,\n        };\n        updated.push(nd);\n      }\n      return updated;\n    });\n  }, [setTranscription]);\n\n  return (\n    <AmplifyAuthenticator>\n      {user && (\n        <UserContext.Provider value={user}>\n          <div>\n            <Container fluid style={{ marginBottom: \"5rem\" }}>\n              <Row>\n                <Col xs={9}>\n                  <SpeakersContext.Provider value={speakerContextValue}>\n                    {transcription.map((dialog, i) => (\n                      <DialogView\n                        key={i}\n                        dialog={dialog}\n                        color={\n                          colors[\n                            allSpeakers.indexOf(\n                              speakers[dialog.speaker] || String(dialog.speaker)\n                            )\n                          ]\n                        }\n                        speakerOptions={speakerOptions}\n                        onSetSpeaker={handleSetSpeaker}\n                        updateDialog={updateDialog}\n                      />\n                    ))}\n                    {partial && (\n                      <DialogView\n                        partial={partial}\n                        speakerOptions={speakerOptions}\n                        onSetSpeaker={handleSetSpeaker}\n                      />\n                    )}\n                  </SpeakersContext.Provider>\n                </Col>\n                <Col>\n                  <SpeakerList\n                    speakerNames={allSpeakers}\n                    onNameChange={handleSpeakerNameChange}\n                    unallocatedSpeakerNames={unallocatedSpeakerNames}\n                    addNewSpeaker={handleCreateNewSpeaker}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          </div>\n          <BottomBar\n            setCredential={setCredential}\n            saveToQuip={handleSaveToQuip}\n            setStop={setStop}\n          />\n        </UserContext.Provider>\n      )}\n    </AmplifyAuthenticator>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Amplify from \"aws-amplify\";\n\nAmplify.configure({\n  // OPTIONAL - if your API requires authentication\n  Auth: {\n    // REQUIRED - Amazon Cognito Identity Pool ID\n    identityPoolId: \"us-west-2:b712e33e-583d-42df-b9fa-14325852efbf\",\n    // REQUIRED - Amazon Cognito Region\n    region: \"us-west-2\",\n    // OPTIONAL - Amazon Cognito User Pool ID\n    userPoolId: \"us-west-2_gdDt1nKsQ\",\n    // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n    userPoolWebClientId: \"6ihc4536tkdk627cmkomahfmkl\",\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"SAMAPI\",\n        endpoint: \"https://3apx34jtve.execute-api.us-west-2.amazonaws.com/Prod\",\n      },\n    ],\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}